<?xml version="1.0" encoding="UTF-8"?>
<launch>

	<!-- these are the arguments you can pass this launch file, for example 
		paused:=true -->
	<arg name="paused" default="false" />
	<arg name="use_sim_time" default="true" />
	<arg name="gui" default="true" />
	<arg name="headless" default="false" />
	<arg name="debug" default="false" />
        <!-- <arg name="world" default="p3dx" /> -->
    <arg name="world_name" default="map1" />
	<!-- We resume the logic in empty_world.launch, changing only the name of 
		the world to be launched -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<!--<arg name="world_name" value="$(find aws_robomaker_small_warehouse_world)/worlds/sw.world" />-->
		<arg name="world_name" value="$(find p3dx_gazebo)/worlds/personal_smallwarehouse.world" />
		<arg name="debug" value="$(arg debug)" />
		<arg name="gui" value="$(arg gui)" />
		<arg name="paused" value="$(arg paused)" />
		<arg name="use_sim_time" value="$(arg use_sim_time)" />
		<arg name="headless" value="$(arg headless)" />
	</include>

        <!-- Load the URDF into the ROS Parameter Server -->
	<!--<param name="robot_description"
                command="$(find xacro)/xacro inorder '$(find p3dx_description)/urdf/pioneer3dx.xacro'" /> -->
   <include file="$(find p3dx_gazebo)/launch/p3dx.launch"> 
	 <!--  <arg name="ns" value="p3dx_1" />-->
   	<arg name="x" value="0.0" />
	   <arg name="y" value="0.0" />
   </include>

	<!-- Run a python script to the send a service call to gazebo_ros to spawn 
                a URDF robot -->
<!--	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
                respawn="false" output="screen" args="-urdf -model p3dx -param robot_description -x 0 -y 3" />->>


        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
        
   <node pkg="tf" type="static_transform_publisher" name="ime_slam_camera_tf" args="0 0 0 0.0 0.0 0.0 /map /odom 100" />
	 ros_control p3rd launch file -->
	<!-- <include file="$(find p3dx_control)/launch/control.launch" /> -->

</launch>
